(set-logic LIA)

( declare-const c Int )
( declare-const c! Int )
( declare-const flag Int )
( declare-const flag! Int )
( declare-const k Int )
( declare-const k! Int )
( declare-const t Int )
( declare-const t! Int )
( declare-const w Int )
( declare-const w! Int )
( declare-const x Int )
( declare-const x! Int )
( declare-const y Int )
( declare-const y! Int )

( declare-const c_0 Int )
( declare-const c_1 Int )
( declare-const c_2 Int )
( declare-const c_3 Int )
( declare-const c_4 Int )
( declare-const c_5 Int )
( declare-const c_6 Int )
( declare-const flag_0 Int )
( declare-const k_0 Int )
( declare-const t_0 Int )
( declare-const t_1 Int )
( declare-const t_2 Int )
( declare-const t_3 Int )
( declare-const t_4 Int )
( declare-const w_0 Int )
( declare-const w_1 Int )
( declare-const w_2 Int )
( declare-const w_3 Int )
( declare-const w_4 Int )
( declare-const x_0 Int )
( declare-const x_1 Int )
( declare-const x_2 Int )
( declare-const x_3 Int )
( declare-const x_4 Int )
( declare-const y_0 Int )
( declare-const y_1 Int )
( declare-const y_2 Int )
( declare-const y_3 Int )
( declare-const y_4 Int )
( declare-const y_5 Int )
( declare-const y_6 Int )

( define-fun inv-f( ( c Int )( flag Int )( k Int )( t Int )( w Int )( x Int )( y Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( c Int )( flag Int )( k Int )( t Int )( w Int )( x Int )( y Int )( c_0 Int )( c_1 Int )( c_2 Int )( c_3 Int )( c_4 Int )( c_5 Int )( c_6 Int )( flag_0 Int )( k_0 Int )( t_0 Int )( t_1 Int )( t_2 Int )( t_3 Int )( t_4 Int )( w_0 Int )( w_1 Int )( w_2 Int )( w_3 Int )( w_4 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int )( y_5 Int )( y_6 Int ) ) Bool
	( and
		( = c c_1 )
		( = k k_0 )
		( = t t_1 )
		( = w w_1 )
		( = x x_1 )
		( = y y_1 )
		( = y_1 0 )
		( = c_1 0 )
		( = x_1 0 )
		( = t_1 0 )
		( = w_1 0 )
		( >= k_0 0 )
		( <= k_0 30 )
		( = y_1 0 )
		( = x_1 0 )
		( = c_1 0 )
		( = t_1 0 )
		( = w_1 0 )
	)
)

( define-fun trans-f ( ( c Int )( flag Int )( k Int )( t Int )( w Int )( x Int )( y Int )( c! Int )( flag! Int )( k! Int )( t! Int )( w! Int )( x! Int )( y! Int )( c_0 Int )( c_1 Int )( c_2 Int )( c_3 Int )( c_4 Int )( c_5 Int )( c_6 Int )( flag_0 Int )( k_0 Int )( t_0 Int )( t_1 Int )( t_2 Int )( t_3 Int )( t_4 Int )( w_0 Int )( w_1 Int )( w_2 Int )( w_3 Int )( w_4 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int )( y_5 Int )( y_6 Int ) ) Bool
	( or
		( and
			( = c_2 c )
			( = t_2 t )
			( = w_2 w )
			( = x_2 x )
			( = y_2 y )
			( = c_2 c! )
			( = t_2 t! )
			( = w_2 w! )
			( = x_2 x! )
			( = y_2 y! )
			( = k k_0 )
			( = k! k_0 )
			( = flag flag! )
			( = t t! )
			( = w w! )
			( = x x! )
			( = y y! )
		)
		( and
			( = c_2 c )
			( = t_2 t )
			( = w_2 w )
			( = x_2 x )
			( = y_2 y )
			( < c_2 k_0 )
			( < flag_0 0 )
			( = c_3 ( + c_2 1 ) )
			( = y_3 ( + y_2 1 ) )
			( = x_3 ( + ( * ( * ( * ( * ( * ( * y_3 y_3 ) y_3 ) y_3 ) y_3 ) y_3 ) y_3 ) x_2 ) )
			( = c_4 c_3 )
			( = t_3 t_2 )
			( = w_3 w_2 )
			( = x_4 x_3 )
			( = y_4 y_3 )
			( = c_4 c! )
			( = t_3 t! )
			( = w_3 w! )
			( = x_4 x! )
			( = y_4 y! )
			(= flag flag_0 )
			(= flag! flag_0 )
			(= k k_0 )
			(= k! k_0 )
		)
		( and
			( = c_2 c )
			( = t_2 t )
			( = w_2 w )
			( = x_2 x )
			( = y_2 y )
			( < c_2 k_0 )
			( not ( < flag_0 0 ) )
			( = flag_0 0 )
			( = c_5 ( + c_2 1 ) )
			( = y_5 ( + y_2 1 ) )
			( = t_4 ( + ( * ( * ( * ( * ( * ( * y_5 y_5 ) y_5 ) y_5 ) y_5 ) y_5 ) y_5 ) t_2 ) )
			( = c_4 c_5 )
			( = t_3 t_4 )
			( = w_3 w_2 )
			( = x_4 x_2 )
			( = y_4 y_5 )
			( = c_4 c! )
			( = t_3 t! )
			( = w_3 w! )
			( = x_4 x! )
			( = y_4 y! )
			(= flag flag_0 )
			(= flag! flag_0 )
			(= k k_0 )
			(= k! k_0 )
		)
		( and
			( = c_2 c )
			( = t_2 t )
			( = w_2 w )
			( = x_2 x )
			( = y_2 y )
			( < c_2 k_0 )
			( not ( < flag_0 0 ) )
			( not ( = flag_0 0 ) )
			( = c_6 ( + c_2 1 ) )
			( = y_6 ( + y_2 1 ) )
			( = w_4 ( + ( * ( * ( * ( * ( * ( * y_6 y_6 ) y_6 ) y_6 ) y_6 ) y_6 ) y_6 ) w_2 ) )
			( = c_4 c_6 )
			( = t_3 t_2 )
			( = w_3 w_4 )
			( = x_4 x_2 )
			( = y_4 y_6 )
			( = c_4 c! )
			( = t_3 t! )
			( = w_3 w! )
			( = x_4 x! )
			( = y_4 y! )
			(= flag flag_0 )
			(= flag! flag_0 )
			(= k k_0 )
			(= k! k_0 )
		)
	)
)

( define-fun post-f ( ( c Int )( flag Int )( k Int )( t Int )( w Int )( x Int )( y Int )( c_0 Int )( c_1 Int )( c_2 Int )( c_3 Int )( c_4 Int )( c_5 Int )( c_6 Int )( flag_0 Int )( k_0 Int )( t_0 Int )( t_1 Int )( t_2 Int )( t_3 Int )( t_4 Int )( w_0 Int )( w_1 Int )( w_2 Int )( w_3 Int )( w_4 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int )( y_5 Int )( y_6 Int ) ) Bool
	( or
		( not
			( and
				( = c c_2)
				( = flag flag_0 )
				( = k k_0)
				( = t t_2)
				( = w w_2)
				( = x x_2)
				( = y y_2)
			)
		)
		( not
			( and
				( not ( < c_2 k_0 ) )
				( not ( = 0 ( + ( + ( + ( + ( - ( - ( - ( * ( * ( * ( * ( * ( * -14 k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) ( * ( * ( * ( * ( * ( * ( * 12 k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) ) ( * ( * ( * ( * ( * ( * ( * ( * 3 k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) k_0 ) ) ( * ( * 2 k_0 ) k_0 ) ) ( * ( * ( * ( * 7 k_0 ) k_0 ) k_0 ) k_0 ) ) ( * 24 x_2 ) ) ( * 24 t_2 ) ) ( * 24 w_2 ) ) ) )
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f c flag k t w x y c_0 c_1 c_2 c_3 c_4 c_5 c_6 flag_0 k_0 t_0 t_1 t_2 t_3 t_4 w_0 w_1 w_2 w_3 w_4 x_0 x_1 x_2 x_3 x_4 y_0 y_1 y_2 y_3 y_4 y_5 y_6  )
		( inv-f c flag k t w x y )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f c flag k t w x y )
			( trans-f c flag k t w x y c! flag! k! t! w! x! y! c_0 c_1 c_2 c_3 c_4 c_5 c_6 flag_0 k_0 t_0 t_1 t_2 t_3 t_4 w_0 w_1 w_2 w_3 w_4 x_0 x_1 x_2 x_3 x_4 y_0 y_1 y_2 y_3 y_4 y_5 y_6 )
		)
		( inv-f c! flag! k! t! w! x! y! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f c flag k t w x y  )
		( post-f c flag k t w x y c_0 c_1 c_2 c_3 c_4 c_5 c_6 flag_0 k_0 t_0 t_1 t_2 t_3 t_4 w_0 w_1 w_2 w_3 w_4 x_0 x_1 x_2 x_3 x_4 y_0 y_1 y_2 y_3 y_4 y_5 y_6 )
	)
))

